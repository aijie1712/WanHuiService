apply plugin: 'com.android.library'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layout/stateview'
            ]
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api 'com.android.support.constraint:constraint-layout:1.1.2'

    api rootProject.ext.dependencies["appcompat_v7"]
    api rootProject.ext.dependencies["cardview"]
    api rootProject.ext.dependencies["recyclerview_v7"]
    api rootProject.ext.dependencies["support_design"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["eventbus"]
    //图片加载
    api rootProject.ext.dependencies["glide"], {
        exclude group: 'com.android.support'
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1', {
        exclude group: 'com.android.support'
    }
    api 'jp.wasabeef:glide-transformations:3.3.0', {
        exclude group: 'com.android.support'
    }
    // http
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["retrofit2_adapter_rxjava"]
    api rootProject.ext.dependencies["retrofit2_converter_gson"]
    api rootProject.ext.dependencies["retrofit2_converter_scalars"]
    api rootProject.ext.dependencies["logging_interceptor"]
    api rootProject.ext.dependencies["okhttp"]
    //butterknife
    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["butterknife_annotations"]
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    api rootProject.ext.dependencies["rxbinding"]
    // lifecycle
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle_components"]
    api rootProject.ext.dependencies["rxpermissions"]
    api rootProject.ext.dependencies["base_rvadapter"]
    api rootProject.ext.dependencies["base_adapter"]
    // 日志
    api rootProject.ext.dependencies["klog"]
    api project(':ShareSdk')
}
